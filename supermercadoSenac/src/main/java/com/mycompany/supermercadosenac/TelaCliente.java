/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package com.mycompany.supermercadosenac;

import com.mycompany.supermercadosenac.dao.ClienteDAO;
import com.mycompany.supermercadosenac.model.Cliente;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eduardo.oesilva
 */
public class TelaCliente extends javax.swing.JFrame {

    /** Creates new form TelaCliente */
    public TelaCliente() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        btnCadastrarCliente = new javax.swing.JButton();
        radioBuscarCPFCliente = new javax.swing.JRadioButton();
        btnExcluirCliente = new javax.swing.JButton();
        btnAlterarCliente = new javax.swing.JButton();
        btnBuscarCliente = new javax.swing.JButton();
        radioBuscarNomeCliente = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        txtBuscarCliente = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Controle Cliente");

        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CPF", "Nome", "Nascimento", "Endereço", "Email", "Sexo", "Estado Civil"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCliente);

        btnCadastrarCliente.setText("Cadastrar");
        btnCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarClienteActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioBuscarCPFCliente);
        radioBuscarCPFCliente.setText("Por CPF");
        radioBuscarCPFCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBuscarCPFClienteActionPerformed(evt);
            }
        });

        btnExcluirCliente.setText("Excluir");
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        btnAlterarCliente.setText("Alterar");
        btnAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarClienteActionPerformed(evt);
            }
        });

        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioBuscarNomeCliente);
        radioBuscarNomeCliente.setSelected(true);
        radioBuscarNomeCliente.setText("Por nome");
        radioBuscarNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBuscarNomeClienteActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(radioBuscarNomeCliente)
                        .addGap(26, 26, 26)
                        .addComponent(radioBuscarCPFCliente)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCadastrarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluirCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                        .addGap(8, 8, 8))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(radioBuscarNomeCliente)
                    .addComponent(radioBuscarCPFCliente)
                    .addComponent(btnBuscarCliente)
                    .addComponent(btnCadastrarCliente)
                    .addComponent(btnAlterarCliente)
                    .addComponent(btnExcluirCliente)
                    .addComponent(txtBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addContainerGap())
        );

        radioBuscarCPFCliente.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarClienteActionPerformed
        CadastroCliente janelaCadastroCliente = new CadastroCliente();
        janelaCadastroCliente.setVisible(true);
    }//GEN-LAST:event_btnCadastrarClienteActionPerformed

    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    private void btnAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarClienteActionPerformed
         CadastroCliente janelaCadastroCliente = new CadastroCliente();
         janelaCadastroCliente.setVisible(true);
    }//GEN-LAST:event_btnAlterarClienteActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
 
//Caso o botão Nome esteja ativado
        if(radioBuscarNomeCliente.isSelected()){
            //caso a caixa esteja vazia - listará todos
            if(txtBuscarCliente.getText().length()==0){
                ArrayList <Cliente> lista = ClienteDAO.listar();
                DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
                modelo.setRowCount(0);
                
                for(Cliente item : lista){
                    modelo.addRow(new String[]{String.valueOf(item.getIdCliente()),
                                               String.valueOf(item.getCPFCliente()),
                                               String.valueOf(item.getNomeCliente()),
                                               String.valueOf(item.getDataNascimento()),
                                               String.valueOf(item.getEnderecoCliente()),
                                               String.valueOf(item.getEmailCliente()),
                                               String.valueOf(item.getSexoCliente()),
                                               String.valueOf(item.getEstadoCivil())});
                }
                //caso tenha algum nome - listará todos que tiverem aquele texto no nome
            }else{
                String nome = "%"+txtBuscarCliente.getText()+"%";
                ArrayList <Cliente> lista = ClienteDAO.buscarPorNome(nome);
                
                DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
                modelo.setRowCount(0);
                for(Cliente item : lista){
                    modelo.addRow(new String[]{String.valueOf(item.getIdCliente()),
                                               String.valueOf(item.getCPFCliente()),
                                               String.valueOf(item.getNomeCliente()),
                                               String.valueOf(item.getDataNascimento()),
                                               String.valueOf(item.getEnderecoCliente()),
                                               String.valueOf(item.getEmailCliente()),
                                               String.valueOf(item.getSexoCliente()),
                                               String.valueOf(item.getEstadoCivil())});
                }
            }
//Caso botão CPF esteja selecionado
        }else{
            //caso a caixa esteja vazia - listará todos
            if(txtBuscarCliente.getText().equals("   .   .   -  ")){
                ArrayList <Cliente> lista = ClienteDAO.listar();
                DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
                modelo.setRowCount(0);
                
                for(Cliente item : lista){
                    modelo.addRow(new String[]{String.valueOf(item.getIdCliente()),
                                               String.valueOf(item.getCPFCliente()),
                                               String.valueOf(item.getNomeCliente()),
                                               String.valueOf(item.getDataNascimento()),
                                               String.valueOf(item.getEnderecoCliente()),
                                               String.valueOf(item.getEmailCliente()),
                                               String.valueOf(item.getSexoCliente()),
                                               String.valueOf(item.getEstadoCivil())});
                }
            }else{
                //caso tenha algum cpf - listará quem tiver aquele CPF
                String cpf = txtBuscarCliente.getText();
                ArrayList <Cliente> lista = ClienteDAO.buscarPorCpf(cpf);
                
                DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
                modelo.setRowCount(0);
                for(Cliente item : lista){
                    modelo.addRow(new String[]{String.valueOf(item.getIdCliente()),
                                               String.valueOf(item.getCPFCliente()),
                                               String.valueOf(item.getNomeCliente()),
                                               String.valueOf(item.getDataNascimento()),
                                               String.valueOf(item.getEnderecoCliente()),
                                               String.valueOf(item.getEmailCliente()),
                                               String.valueOf(item.getSexoCliente()),
                                               String.valueOf(item.getEstadoCivil())});
                }
            }
        }

    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void radioBuscarCPFClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBuscarCPFClienteActionPerformed
        
        txtBuscarCliente.setText(null);

    }//GEN-LAST:event_radioBuscarCPFClienteActionPerformed

    private void radioBuscarNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBuscarNomeClienteActionPerformed

        txtBuscarCliente.setText(null);
                
    }//GEN-LAST:event_radioBuscarNomeClienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarCliente;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnCadastrarCliente;
    private javax.swing.JButton btnExcluirCliente;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioBuscarCPFCliente;
    private javax.swing.JRadioButton radioBuscarNomeCliente;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTextField txtBuscarCliente;
    // End of variables declaration//GEN-END:variables

}
